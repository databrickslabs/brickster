% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/global-init-scripts.R
\name{db_global_init_scripts_create}
\alias{db_global_init_scripts_create}
\title{Create a Global Init Script}
\usage{
db_global_init_scripts_create(
  name,
  script,
  position = NULL,
  enabled = FALSE,
  host = db_host(),
  token = db_token(),
  perform_request = TRUE
)
}
\arguments{
\item{name}{The name of the script}

\item{script}{String, content of script.}

\item{position}{Position of the global init script, must be >=1.
When not specified the script goes to last position.
When position already exists it will take position and displace existing.}

\item{enabled}{Boolean (default: false). Specifies whether the script is enabled.
The script runs only if enabled.}

\item{host}{Databricks workspace URL, defaults to calling \code{\link[=db_host]{db_host()}}.}

\item{token}{Databricks workspace token, defaults to calling \code{\link[=db_token]{db_token()}}.}
}
\description{
Create a Global Init Script
}
\details{
The \href{https://docs.databricks.com/dev-tools/api/latest/global-init-scripts.html}{Global Init Scripts API}
enables Databricks administrators to configure global initialization scripts
for their workspace.

These scripts run on every node in every cluster in the workspace.
Existing clusters must be restarted to pick up any changes made to global
init scripts.

Global init scripts are run in order. If the init script returns with a bad
exit code, the Apache Spark container fails to launch and init scripts with
later position are skipped. If enough containers fail, the entire cluster
fails with a \code{GLOBAL_INIT_SCRIPT_FAILURE} error code.
}
\seealso{
Other Global Init Script API: 
\code{\link{db_global_init_scripts_delete}()},
\code{\link{db_global_init_scripts_get}()},
\code{\link{db_global_init_scripts_list}()},
\code{\link{db_global_init_scripts_update}()}
}
\concept{Global Init Script API}
