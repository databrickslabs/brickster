% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mlflow-databricks.R
\name{db_mlflow_model_transition_stage}
\alias{db_mlflow_model_transition_stage}
\title{Transition a Model Version's Stage}
\usage{
db_mlflow_model_transition_stage(
  name,
  version,
  stage = c("None", "Staging", "Production", "Archived"),
  archive_existing_versions = TRUE,
  comment = NULL,
  host = db_host(),
  token = db_token(),
  perform_request = TRUE
)
}
\arguments{
\item{name}{Name of the model.}

\item{version}{Version of the model.}

\item{stage}{Target stage of the transition. Valid values are: \code{None},
\code{Staging}, \code{Production}, \code{Archived}.}

\item{archive_existing_versions}{Boolean (Default: \code{TRUE}). Specifies whether
to archive all current model versions in the target stage.}

\item{comment}{User-provided comment on the action.}

\item{host}{Databricks workspace URL, defaults to calling \code{\link[=db_host]{db_host()}}.}

\item{token}{Databricks workspace token, defaults to calling \code{\link[=db_token]{db_token()}}.}

\item{perform_request}{If \code{TRUE} (default) the request is performed, if
\code{FALSE} the httr2 request is returned \emph{without} being performed.}
}
\description{
Transition a Model Version's Stage
}
\details{
This is a Databricks version of the MLflow endpoint that also accepts a
comment associated with the transition to be recorded.
}
\seealso{
Other Model Registry API: 
\code{\link{db_mlflow_model_approve_transition_req}()},
\code{\link{db_mlflow_model_delete_transition_req}()},
\code{\link{db_mlflow_model_open_transition_reqs}()},
\code{\link{db_mlflow_model_reject_transition_req}()},
\code{\link{db_mlflow_model_transition_req}()},
\code{\link{db_mlflow_model_version_comment}()},
\code{\link{db_mlflow_model_version_comment_delete}()},
\code{\link{db_mlflow_model_version_comment_edit}()},
\code{\link{db_mlflow_registered_model_details}()}
}
\concept{Model Registry API}
